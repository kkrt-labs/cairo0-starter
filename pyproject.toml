[tool.poetry]
name = "cairo0-starter"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
starknet-py = "^0.20.0"
cairo-lang = "0.13.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-asyncio = "~0.21.0"
toml = "^0.10.2"
pandas = "^1.5.1"
black = "^22.10.0"
isort = "^5.10.1"
pytest-xdist = { version = "^3.0.2", extras = ["psutil"] }
setuptools = "^68.2.0"
pyperclip = "^1.8.2"
tabulate = "^0.9.0"
pytest-env = "^1.1.3"
ipykernel = "^6.29.4"

[tool.pytest.ini_options]
filterwarnings = [
  "ignore:Using or importing the ABCs:DeprecationWarning",                                # from frozendict
  "ignore:lexer_state will be removed in subsequent releases. Use lexer_thread instead.", # from lark
  "ignore:abi:DeprecationWarning",                                                        # from web3
  "ignore::marshmallow.warnings.RemovedInMarshmallow4Warning",                            # from marshmallow
]
pythonpath = ["."]

asyncio_mode = "auto"
env = [
  "PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION = python",
  "PYDEVD_WARN_SLOW_RESOLVE_TIMEOUT = 3",
]

[tool.isort]
profile = "black"

[tool.autoflake]
in_place = true
remove_unused_variables = true
remove_all_unused_imports = true

[tool.codespell]
ignore-words = '.codespellignore'
skip = '.git'
check-filenames = ''
check-hidden = ''

[tool.bandit]
exclude_dirs = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
